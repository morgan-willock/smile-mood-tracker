{"version":3,"sources":["GuardedRoute.js","Register.js","LoginPage.js","Logout.js","MoodDetails.js","DayPickerContainer.js","Dashboard.js","MoodForm.js","Mood.js","EditMood.js","App.js","reportWebVitals.js","index.js"],"names":["GuardedRoute","Component","component","rest","useState","authorized","setAuthorized","loading","setLoading","userId","setUserId","useEffect","console","log","axios","get","then","response","data","render","props","to","Register","email","setEmail","password","setPassword","registerSuccess","setRegisterSuccess","className","onSubmit","e","preventDefault","alert","user","post","register","htmlFor","type","id","aria-describedby","placeholder","onChange","event","target","value","LoginPage","loginSuccess","setLoginSuccess","login","Logout","MoodDetails","date","moodSelection","setMoodSelection","activities","setActivities","currentDate","setCurrentDate","dbFormattedDate","toISOString","split","request","undefined","rows","dbResponseActivities","dbResponseMoodSelection","map","activity","idx","modifiers","ratingOne","ratingTwo","ratingThree","ratingFour","ratingFive","DayPickerContainer","handleDayClick","bind","state","selectedDay","selection","day","selected","this","setState","retrievedMoods","forEach","mood","inputDate","Date","getFullYear","getMonth","getDate","formatDate","input_date","year","month","mood_selection","push","forceUpdate","selectedDays","onDayClick","showOutsideDays","React","Dashboard","verifyTodaysMood","setVerifyTodaysMood","todaysDateConverted","toLocaleDateString","message","MoodForm","handleMoodSelection","handleActivitySelection","activitiesFiltered","includes","filter","data-toggle","onClick","name","autoComplete","onFormChange","Mood","redirectBool","setRedirectBool","EditMood","useParams","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97370a7f.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst GuardedRoute = ({ component: Component, ...rest }) => {\n\n    const [ authorized, setAuthorized ] = useState(false)\n    const [ loading, setLoading ] = useState(true)\n    const [ userId, setUserId ] = useState(null)\n\n    useEffect(() => {\n\n        console.log(rest)\n\n      axios.get('/protected-route')\n              .then(response => {\n                  if(response.data.authorized === true) {\n                      console.log('success')\n                      setUserId(response.data.userId)\n                      setAuthorized(true)\n                  } else if (response.data.authorized === false) {\n                      console.log('you do not have permission to view this resource')\n                      setAuthorized(false)\n                  }\n                  setLoading(false)\n              })\n            }, [ authorized ])\n\n    return (\n        <div>\n            {loading    \n                ? <div>loading</div> \n                : authorized \n                    ? <Route {...rest} render={(...props) => <Component {...props} userId={userId} />}></Route>\n                    : <Redirect to='/login'/>\n            }\n        </div>\n    )\n}\n\nexport default GuardedRoute;","import { useState } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default function Register() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [registerSuccess, setRegisterSuccess] = useState(null)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if (email === \"\" || password === \"\") {\n            return alert('no email or password entered')\n        }\n\n        const user = { email, password }\n\n        axios.post('/register', user)\n            .then(response => {\n                if (response.data.register === 'success') {\n                    setRegisterSuccess(true)\n                } else if (response.data.register === 'failed') {\n                    alert('email aleady taken')\n                    setRegisterSuccess(false)\n                }\n            })\n    }\n\n    function handleEmailChange(event) {\n        setEmail(event.target.value)\n    }\n\n    function handlePasswordChange(event) {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <div className=\"register-container\">\n            <h1 className=\"smile-text-header\">Smile.</h1>\n            Register:\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={handleEmailChange} />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={handlePasswordChange} />\n                    <small id=\"passwordHelp\" className=\"form-text text-muted\">Must be over 6 char</small>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                <Link to=\"/login\">\n                    <p className=\"register-login-link\">Already a member? click here to login!</p>\n                </Link>\n            </form>\n            {registerSuccess ? <Redirect to=\"/login\" /> : \"\"}\n        </div>\n    )\n}","import { useState } from 'react'\nimport axios from 'axios'\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default function LoginPage() {\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n    const [ loginSuccess, setLoginSuccess ] = useState(null)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if (email === \"\" || password === \"\") {\n            return alert('no email or password entered')\n        }\n\n        const user = { email, password }\n\n        axios.post('/login', user)\n            .then(response => {\n                if(response.data.login === 'success') {\n                    setLoginSuccess(true)\n                } else if (response.data.login === 'failed') {\n                    setLoginSuccess(false)\n                }\n            })\n    }\n\n    function handleEmailChange(event) {\n        setEmail(event.target.value)\n    }\n\n    function handlePasswordChange(event) {\n        setPassword(event.target.value)\n    }\n\n    return (\n        <div className=\"bootstrap-container\">\n            <h1 className=\"smile-text-header\">Smile.</h1>\n            Login:\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" onChange={handleEmailChange}/>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={handlePasswordChange}/>\n                    <small id=\"passwordHelp\" className=\"form-text text-muted\">Must be over 6 char</small>\n                </div>\n                <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n                <Link to=\"/register\">\n                    <p className=\"register-login-link\">Not a member? click here to register!</p>\n                </Link>\n            </form>\n            {loginSuccess && <Redirect to=\"/dashboard\" />}\n        </div>\n        )\n}\n","import { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Logout() {\n    \n    const logout = true\n    axios.get('/logout')\n\n    return (\n        <div>\n            {logout ? <Redirect to=\"/login\" /> : \"\"}\n        </div>\n    )\n}","import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function MoodDetails({ date, userId }) {\n    const [ moodSelection, setMoodSelection ] = useState(null)\n    const [ activities, setActivities ] = useState([])\n    const [ currentDate, setCurrentDate ] = useState(null)\n\n    useEffect(() => {\n        const dbFormattedDate = date.toISOString().split('T')[0]\n\n        setCurrentDate(dbFormattedDate)\n\n        const request = { userId, date: dbFormattedDate }\n      \n        axios.post('/mood-details', request)\n            .then(response => {\n\n                if(response.data.rows[0] !== undefined) {\n                    let dbResponseActivities = response.data.rows[0][\"activities\"]\n                    let dbResponseMoodSelection = response.data.rows[0][\"mood_selection\"]\n    \n                    setActivities(dbResponseActivities)\n                    setMoodSelection(dbResponseMoodSelection)\n                }\n            })\n    }, [ currentDate ])\n\n    return (\n        <div>\n            <h4>mood details</h4>\n            <p>{currentDate}</p>\n            <p>{moodSelection}</p>\n            <ul>\n                {activities.map((activity, idx) => {\n                    return (\n                        <li key={idx}>{activity}</li>\n                    )\n                })}\n            </ul>\n            <Link to={`/mood/${currentDate}`}>\n                <button type=\"button\" className=\"btn btn-info\">Edit</button>\n            </Link>\n        </div>\n    )\n}","import React from 'react';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport axios from 'axios';\nimport MoodDetails from './MoodDetails'\n\nlet modifiers = { \n  ratingOne: [],\n  ratingTwo: [],\n  ratingThree: [],\n  ratingFour: [],\n  ratingFive: [],\n }\n\nconst ratingOneStyle = `.DayPicker-Day--ratingOne {\n  background-color: #FF6C65;\n  color: white;\n}`\nconst ratingTwoStyle = `.DayPicker-Day--ratingTwo {\n  background-color: #FFBF65;\n  color: white;\n}`\nconst ratingThreeStyle = `.DayPicker-Day--ratingThree {\n  background-color: #FFE765;\n  color: white;\n}`\nconst ratingFourStyle = `.DayPicker-Day--ratingFour {\n  background-color: #46F482;\n  color: white;\n}`\nconst ratingFiveStyle = `.DayPicker-Day--ratingFive {\n  background-color: #40DCD4;\n  color: white;\n}`\n\nfunction formatDate(inputDate) {\n  const date = new Date(inputDate)\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const day = date.getDate()\n\n  return [year, month, day]\n}\n\nexport default class DayPickerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: null,\n      selection: null,\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n\n    this.setState({\n      selectedDay: selected ? undefined : day,\n      selection: selected ? false : true\n    });\n  }\n\n  componentDidMount() {\n\n    const userId = this.props.userId\n    const request = { userId }\n\n    axios.post('/retrieve-moods', request )\n      .then(response => {\n\n        const retrievedMoods = response.data\n\n        modifiers = { \n          ratingOne: [],\n          ratingTwo: [],\n          ratingThree: [],\n          ratingFour: [],\n          ratingFive: [],\n         }\n\n        retrievedMoods.forEach(mood => {\n          let [ year, month, day] = formatDate(mood.input_date)\n\n          if (mood.mood_selection === 1) {\n            modifiers.ratingOne.push(new Date(year, month, day))\n          } else if (mood.mood_selection === 2) {\n            modifiers.ratingTwo.push(new Date(year, month, day))\n          } else if (mood.mood_selection === 3) {\n            modifiers.ratingThree.push(new Date(year, month, day))\n          } else if (mood.mood_selection === 4) {\n            modifiers.ratingFour.push(new Date(year, month, day))\n          } else if (mood.mood_selection === 5) {\n            modifiers.ratingFive.push(new Date(year, month, day))\n          }\n        })\n\n        this.forceUpdate();\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"daypicker-container\">\n        <style>{ratingOneStyle}</style>\n        <style>{ratingTwoStyle}</style>\n        <style>{ratingThreeStyle}</style>\n        <style>{ratingFourStyle}</style>\n        <style>{ratingFiveStyle}</style>\n        <DayPicker\n          selectedDays={this.state.selectedDay}\n          onDayClick={this.handleDayClick}\n          modifiers={modifiers}\n          showOutsideDays\n          month={new Date()\n          }\n        />\n        <p>\n          {this.state.selectedDay\n            ? ''\n            : 'Pick a day to view or edit your mood'}\n        </p>\n        {this.state.selection \n          && <MoodDetails \n            date={this.state.selectedDay}\n            userId={this.props.userId}\n            />}\n      </div>\n    );\n  }\n}","import DayPickerContainer from './DayPickerContainer';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\n\nexport default function Dashboard({ userId }) {\n    const [ loading, setLoading ] = useState(true)\n    const [ verifyTodaysMood, setVerifyTodaysMood ] = useState(false)\n\n    useEffect(() => {\n\n        const todaysDate = new Date()\n        const todaysDateConverted = todaysDate.toLocaleDateString('en-US')\n\n        const request = { userId, todaysDateConverted }\n\n        axios.post('/verify-mood', request )\n            .then(response => {\n                if (response.data.message === 'success') {\n                    setLoading(false)\n                } else if (response.data.message === 'failed') {\n                    setVerifyTodaysMood(true)\n                    setLoading(false)\n                }\n            })\n    })\n\n    return (\n        <div>\n            {loading    \n                ? <div>loading</div> \n                : verifyTodaysMood\n                    ? <Redirect to='/mood'/>\n                    : <DayPickerContainer userId={userId} />\n            }\n        </div>\n    )\n}\n<Redirect to='/login'/>\n","import { useState } from 'react';\n\nexport default function MoodForm(props) {\n\n    const [ moodSelection , setMoodSelection ] = useState(null)\n    const [ activities , setActivities ] = useState([])\n\n    function handleMoodSelection(e) {\n        setMoodSelection(e.target.id)\n    }\n\n    function handleActivitySelection(e) {\n        let activitiesFiltered = null\n\n        if (activities.includes(e.target.value)) {\n            activitiesFiltered = activities.filter(activity => {\n                return activity !== e.target.value\n            })\n            setActivities(activitiesFiltered)\n        } else {\n            setActivities([...activities, e.target.value])\n        }\n    }\n\n    function handleSubmit() {\n        props.onFormChange(activities, moodSelection)\n    }\n\n    return (\n        <div>\n            <h2>How are you feeling today?</h2>\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                    <label onClick={handleMoodSelection} className=\"btn btn-outline-primary btn-toggle\" id=\"1\">\n                        <input type=\"radio\" name=\"options\" id=\"option1\" autoComplete=\"off\" /> 1\n                    </label>\n                    <label onClick={handleMoodSelection} className=\"btn btn-outline-primary btn-toggle\" id=\"2\">\n                        <input type=\"radio\" name=\"options\" id=\"option2\" autoComplete=\"off\" /> 2\n                    </label>\n                    <label onClick={handleMoodSelection} className=\"btn btn-outline-primary btn-toggle\" id=\"3\">\n                        <input type=\"radio\" name=\"options\" id=\"option3\" autoComplete=\"off\" /> 3\n                    </label>\n                    <label onClick={handleMoodSelection} className=\"btn btn-outline-primary btn-toggle\" id=\"4\">\n                        <input type=\"radio\" name=\"options\" id=\"option4\" autoComplete=\"off\" /> 4\n                    </label>\n                    <label onClick={handleMoodSelection} className=\"btn btn-outline-primary btn-toggle\" id=\"5\">\n                        <input type=\"radio\" name=\"options\" id=\"option5\" autoComplete=\"off\" /> 5\n                    </label>\n                </div>\n                <div className=\"form-check\" onClick={handleActivitySelection}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"walking\" id=\"flexCheckWalking\"></input>\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckWalking\">\n                        Walking\n                    </label>\n                </div>\n                <div className=\"form-check\" onClick={handleActivitySelection}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"relaxing\" id=\"flexCheckRelaxing\"></input>\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckRelaxing\">\n                        Relaxing\n                    </label>\n                </div>\n                <div className=\"form-check\" onClick={handleActivitySelection}>\n                    <input className=\"form-check-input\" type=\"checkbox\" value=\"socialising\" id=\"flexCheckSocialising\"></input>\n                    <label className=\"form-check-label\" htmlFor=\"flexCheckSocialising\">\n                        Socialising\n                    </label>\n                </div>\n                <button type=\"button\" onClick={handleSubmit} className=\"btn btn-primary\">Enter</button>\n        </div>\n    )\n}","import MoodForm from './MoodForm';\nimport { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Mood({ userId }) {\n    // const [ moodSelection , setMoodSelection ] = useState(null)\n    // const [ activities , setActivities ] = useState([])\n    const [ redirectBool, setRedirectBool ] = useState(false)\n    const [ loading, setLoading ] = useState(true)\n\n    function handleFormChanges(activities, moodSelection) {\n        // setMoodSelection(moodSelection)\n        // setActivities(activities)\n\n        const mood = { userId, moodSelection, activities }\n\n        axios.post('/mood', mood)\n            .then(response => {\n                if (response.data.message === 'success') {\n                    setRedirectBool(true)\n                } else if (response.data.message === 'failed') {\n                    console.log('failed')\n                }\n        })\n    }\n\n    useEffect(() => {\n\n        const request = { userId }\n\n        axios.post('/verify-mood', request )\n            .then(response => {\n                if (response.data.message === 'success') {\n                    setRedirectBool(true)\n                } else if (response.data.message === 'failed') {\n                    setLoading(false)\n                }\n            })\n    })\n\n    return (\n        <div>\n            {loading\n                ? <div>\"loading\"</div>\n                : <MoodForm onFormChange={handleFormChanges}/>\n            }\n            {redirectBool && <Redirect to='/dashboard'/>}\n        </div>\n    )\n}","import MoodForm from './MoodForm';\nimport { useState, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function EditMood({ userId }) {\n    const [ redirectBool, setRedirectBool ] = useState(false)\n    const [ loading, setLoading ] = useState(true)\n\n    const { date } = useParams();\n\n    function handleFormChanges(activities, moodSelection) {\n\n        const mood = { userId, date, moodSelection, activities }\n\n        axios.post('/edit-mood', mood)\n            .then(response => {\n                if (response.data.message === 'success') {\n                    setRedirectBool(true)\n                } else if (response.data.message === 'updated') {\n                    setRedirectBool(true)\n                }\n        })\n    }\n\n    useEffect(() => {\n        setLoading(false)\n    })\n\n    return (\n        <div>\n            <h1>edit mood</h1>\n            <h2>{date}</h2>\n            {loading\n                ? <div>\"loading\"</div>\n                : <MoodForm onFormChange={handleFormChanges}/>\n            }\n            {redirectBool && <Redirect to='/dashboard'/>}\n        </div>\n    )\n}","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport GuardedRoute from './GuardedRoute'\nimport Register from './Register'\nimport LoginPage from './LoginPage'\nimport Logout from './Logout'\nimport Dashboard from './Dashboard'\nimport Mood from './Mood'\nimport EditMood from './EditMood'\nimport './LoginPage.css'\nimport './Register.css'\nimport './DayPickerContainer.css'\n\nfunction App() {\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <GuardedRoute path=\"/dashboard\" component={Dashboard} />\n        <GuardedRoute path=\"/mood/:date\" component={EditMood} />\n        <GuardedRoute path=\"/mood\" component={Mood} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}