{"version":3,"sources":["components/GuardedRoute.js","components/Smile.js","components/Register.js","components/LoginPage.js","components/Logout.js","components/MoodDetails.js","components/MoodEmoji.js","components/DayPickerContainer.js","components/Dashboard.js","components/MoodButtons.js","components/MoodForm.js","components/Mood.js","components/EditMood.js","App.js","reportWebVitals.js","index.js"],"names":["GuardedRoute","Component","component","rest","useState","authorized","setAuthorized","loading","setLoading","userId","setUserId","useEffect","console","log","axios","get","then","response","data","render","props","to","Smile","className","Register","email","setEmail","password","setPassword","registerSuccess","setRegisterSuccess","onSubmit","e","preventDefault","alert","user","post","register","htmlFor","type","id","aria-describedby","placeholder","onChange","event","target","value","LoginPage","loginSuccess","setLoginSuccess","login","Logout","MoodDetails","date","moodSelection","setMoodSelection","activities","setActivities","currentDate","setCurrentDate","dbFormattedDate","toISOString","split","request","undefined","rows","dbResponseActivities","dbResponseMoodSelection","map","activity","idx","MoodEmoji","src","alt","modifiers","ratingOne","ratingTwo","ratingThree","ratingFour","ratingFive","DayPickerContainer","handleDayClick","bind","state","selectedDay","selection","day","selected","this","setState","retrievedMoods","forEach","mood","inputDate","Date","getFullYear","getMonth","getDate","formatDate","input_date","year","month","mood_selection","push","forceUpdate","selectedDays","onDayClick","showOutsideDays","React","Dashboard","verifyTodaysMood","setVerifyTodaysMood","todaysDateConverted","toLocaleDateString","message","MoodButtons","handleClick","click","name","onClick","MoodForm","handleActivitySelection","activitiesFiltered","includes","filter","onFormChange","Mood","redirectBool","setRedirectBool","EditMood","useParams","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4361eed3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst GuardedRoute = ({ component: Component, ...rest }) => {\n  const [authorized, setAuthorized] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [userId, setUserId] = useState(null);\n\n  useEffect(() => {\n    console.log(rest);\n\n    axios.get(\"/protected-route\").then((response) => {\n      if (response.data.authorized === true) {\n        console.log(\"success\");\n        setUserId(response.data.userId);\n        setAuthorized(true);\n      } else if (response.data.authorized === false) {\n        console.log(\"you do not have permission to view this resource\");\n        setAuthorized(false);\n      }\n      setLoading(false);\n    });\n  }, [authorized]);\n\n  return (\n    <div>\n      {loading ? (\n        <div>loading</div>\n      ) : authorized ? (\n        <Route\n          {...rest}\n          render={(...props) => <Component {...props} userId={userId} />}\n        ></Route>\n      ) : (\n        <Redirect to=\"/login\" />\n      )}\n    </div>\n  );\n};\n\nexport default GuardedRoute;\n","import '../styles/Smile.css';\n\nexport default function Smile() {\n    return (\n        <h1 className=\"smile-text-header\">Smile.</h1>\n    )\n}","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Smile from \"./Smile.js\";\n\nexport default function Register() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [registerSuccess, setRegisterSuccess] = useState(null);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      return alert(\"no email or password entered\");\n    }\n\n    const user = { email, password };\n\n    axios.post(\"/register\", user).then((response) => {\n      if (response.data.register === \"success\") {\n        setRegisterSuccess(true);\n      } else if (response.data.register === \"failed\") {\n        alert(\"email aleady taken\");\n        setRegisterSuccess(false);\n      }\n    });\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  useEffect(() => {\n    axios.get('/protected-route').then((response) => {\n      if (response.data.authorized === true) {\n        setRegisterSuccess(true);\n      }\n    });\n  })\n\n  return (\n    <div className=\"register-container\">\n      <Smile />\n      <p className=\"info-header\">A simple mood tracker to keep you smiling</p>\n      <p className=\"login-header\">Register:</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            onChange={handleEmailChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\n            We'll never share your email with anyone else.\n          </small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n          <small id=\"passwordHelp\" className=\"form-text text-muted\">\n            Must be over 6 char\n          </small>\n        </div>\n        <button type=\"submit\" className=\"btn btn-info\">\n          Register\n        </button>\n        <Link to=\"/login\">\n          <p className=\"register-login-link\">\n            Already a member? click here to login!\n          </p>\n        </Link>\n      </form>\n      {registerSuccess ? <Redirect to=\"/login\" /> : \"\"}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport Smile from \"./Smile.js\";\nimport '../styles/LoginPage.css'\n\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginSuccess, setLoginSuccess] = useState(null);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (email === \"\" || password === \"\") {\n      return alert(\"no email or password entered\");\n    }\n\n    const user = { email, password };\n\n    axios.post(\"/login\", user).then((response) => {\n      if (response.data.login === \"success\") {\n        setLoginSuccess(true);\n      } else if (response.data.login === \"failed\") {\n        setLoginSuccess(false);\n      }\n    });\n  }\n\n  function handleEmailChange(event) {\n    setEmail(event.target.value);\n  }\n\n  function handlePasswordChange(event) {\n    setPassword(event.target.value);\n  }\n\n  useEffect(() => {\n    axios.get('/protected-route').then((response) => {\n      if (response.data.authorized === true) {\n        setLoginSuccess(true);\n      }\n    });\n  })\n\n  return (\n    <div className=\"bootstrap-container\">\n      <Smile />\n      <p className=\"info-header\">A simple mood tracker to keep you smiling</p>\n      <p className=\"login-header\">Login:</p>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputEmail1\">Email address</label>\n          <input\n            type=\"email\"\n            className=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n            placeholder=\"Enter email\"\n            onChange={handleEmailChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\"></small>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"exampleInputPassword1\">Password</label>\n          <input\n            type=\"password\"\n            className=\"form-control\"\n            id=\"exampleInputPassword1\"\n            placeholder=\"Password\"\n            onChange={handlePasswordChange}\n          />\n          <small id=\"passwordHelp\" className=\"form-text text-muted\">\n            Must be over 6 char\n          </small>\n        </div>\n        <button type=\"submit\" className=\"btn btn-info\">\n          Login\n        </button>\n        <Link to=\"/register\">\n          <p className=\"register-login-link\">\n            Not a member? click here to register!\n          </p>\n        </Link>\n      </form>\n      {loginSuccess && <Redirect to=\"/dashboard\" />}\n    </div>\n  );\n}\n","import { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Logout() {\n  const logout = true;\n  axios.get(\"/logout\");\n\n  return <div>{logout ? <Redirect to=\"/login\" /> : \"\"}</div>;\n}\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport '../styles/MoodDetails.css'\n\nexport default function MoodDetails({ date, userId }) {\n  const [moodSelection, setMoodSelection] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [currentDate, setCurrentDate] = useState(null);\n\n  useEffect(() => {\n    const dbFormattedDate = date.toISOString().split(\"T\")[0];\n\n    setCurrentDate(dbFormattedDate);\n\n    const request = { userId, date: dbFormattedDate };\n\n    axios.post(\"/mood-details\", request).then((response) => {\n      if (response.data.rows[0] !== undefined) {\n        let dbResponseActivities = response.data.rows[0][\"activities\"];\n        let dbResponseMoodSelection = response.data.rows[0][\"mood_selection\"];\n\n        setActivities(dbResponseActivities);\n        setMoodSelection(dbResponseMoodSelection);\n      }\n    });\n  }, [currentDate]);\n\n  return (\n    <div>\n      <h4 className=\"mood-details-header\">Mood details.</h4>\n      <p className=\"mood-details-selected-day\">Selected day: {currentDate}</p>\n      <p className=\"mood-rating-selected-day\">Mood rating: {moodSelection}</p>\n      <p className=\"mood-activities-selected-day\">Activities:</p>\n      <ul className=\"mood-details-activites-ul\">\n        {activities.map((activity, idx) => {\n          return <li key={idx} className=\"mood-details-activities-li\">{activity}</li>;\n        })}\n      </ul>\n      <Link to={`/mood/${currentDate}`}>\n        <button type=\"button\" className=\"btn btn-info\">\n          Edit\n        </button>\n      </Link>\n    </div>\n  );\n}\n","import \"../styles/MoodEmoji.css\";\n\nexport default function MoodEmoji(props) {\n  return (\n    <div className=\"mood-emoji-container\">\n      <span className=\"single-emoji-container one\">\n        <img src=\"https://openmoji.org/data/black/svg/1F613.svg\" alt=\"\" />\n      </span>\n      <span className=\"single-emoji-container two\">\n        <img src=\"https://openmoji.org/data/black/svg/1F641.svg\" alt=\"\" />\n      </span>\n      <span className=\"single-emoji-container three\">\n        <img src=\"https://openmoji.org/data/black/svg/1F610.svg\" alt=\"\" />\n      </span>\n      <span className=\"single-emoji-container four\">\n        <img src=\"https://openmoji.org/data/black/svg/1F642.svg\" alt=\"\" />\n      </span>\n      <span className=\"single-emoji-container five\">\n        <img src=\"https://openmoji.org/data/black/svg/1F60A.svg\" alt=\"\" />\n      </span>\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport DayPicker from \"react-day-picker\";\nimport MoodDetails from \"./MoodDetails\";\nimport MoodEmoji from \"../components/MoodEmoji\"\nimport \"react-day-picker/lib/style.css\";\nimport Smile from \"./Smile.js\";\n\nlet modifiers = {\n  ratingOne: [],\n  ratingTwo: [],\n  ratingThree: [],\n  ratingFour: [],\n  ratingFive: [],\n};\n\nconst ratingOneStyle = `.DayPicker-Day--ratingOne {\n  background-color: #FF6C65;\n  color: white;\n}`;\nconst ratingTwoStyle = `.DayPicker-Day--ratingTwo {\n  background-color: #FFBF65;\n  color: white;\n}`;\nconst ratingThreeStyle = `.DayPicker-Day--ratingThree {\n  background-color: #FFE765;\n  color: white;\n}`;\nconst ratingFourStyle = `.DayPicker-Day--ratingFour {\n  background-color: #46F482;\n  color: white;\n}`;\nconst ratingFiveStyle = `.DayPicker-Day--ratingFive {\n  background-color: #40DCD4;\n  color: white;\n}`;\n\nfunction formatDate(inputDate) {\n  const date = new Date(inputDate);\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate();\n\n  return [year, month, day];\n}\n\nexport default class DayPickerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDayClick = this.handleDayClick.bind(this);\n    this.state = {\n      selectedDay: null,\n      selection: null,\n    };\n  }\n\n  handleDayClick(day, { selected }) {\n    this.setState({\n      selectedDay: selected ? undefined : day,\n      selection: selected ? false : true,\n    });\n  }\n\n  componentDidMount() {\n    const userId = this.props.userId;\n    const request = { userId };\n\n    axios.post(\"/retrieve-moods\", request).then((response) => {\n      const retrievedMoods = response.data;\n\n      modifiers = {\n        ratingOne: [],\n        ratingTwo: [],\n        ratingThree: [],\n        ratingFour: [],\n        ratingFive: [],\n      };\n\n      retrievedMoods.forEach((mood) => {\n        let [year, month, day] = formatDate(mood.input_date);\n\n        if (mood.mood_selection === 1) {\n          modifiers.ratingOne.push(new Date(year, month, day));\n        } else if (mood.mood_selection === 2) {\n          modifiers.ratingTwo.push(new Date(year, month, day));\n        } else if (mood.mood_selection === 3) {\n          modifiers.ratingThree.push(new Date(year, month, day));\n        } else if (mood.mood_selection === 4) {\n          modifiers.ratingFour.push(new Date(year, month, day));\n        } else if (mood.mood_selection === 5) {\n          modifiers.ratingFive.push(new Date(year, month, day));\n        }\n      });\n\n      this.forceUpdate();\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"daypicker-container\">\n        <style>{ratingOneStyle}</style>\n        <style>{ratingTwoStyle}</style>\n        <style>{ratingThreeStyle}</style>\n        <style>{ratingFourStyle}</style>\n        <style>{ratingFiveStyle}</style>\n        <Smile />\n        <p className=\"info-header\">A simple mood tracker to keep you smiling</p>\n        <p className=\"login-header\">One thing at a time and enjoy yourself</p>\n        <DayPicker\n          selectedDays={this.state.selectedDay}\n          onDayClick={this.handleDayClick}\n          modifiers={modifiers}\n          showOutsideDays\n          month={new Date()}\n        />\n        <MoodEmoji />\n        <p>\n          {this.state.selectedDay ? \"\" : <p className=\"pick-a-day-text\" >Pick a day to view or edit your mood</p> }\n        </p>\n        {this.state.selection && (\n          <MoodDetails\n            date={this.state.selectedDay}\n            userId={this.props.userId}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import DayPickerContainer from \"./DayPickerContainer\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Dashboard({ userId }) {\n  const [loading, setLoading] = useState(true);\n  const [verifyTodaysMood, setVerifyTodaysMood] = useState(false);\n\n  useEffect(() => {\n    const todaysDate = new Date();\n    const todaysDateConverted = todaysDate.toLocaleDateString(\"en-US\");\n\n    const request = { userId, todaysDateConverted };\n\n    axios.post(\"/verify-mood\", request).then((response) => {\n      if (response.data.message === \"success\") {\n        setLoading(false);\n      } else if (response.data.message === \"failed\") {\n        setVerifyTodaysMood(true);\n        setLoading(false);\n      }\n    });\n  });\n\n  return (\n    <div>\n      {loading ? (\n        <div>loading</div>\n      ) : verifyTodaysMood ? (\n        <Redirect to=\"/mood\" />\n      ) : (\n        <DayPickerContainer userId={userId} />\n      )}\n    </div>\n  );\n}","import \"../styles/MoodButtons.scss\";\n\nexport default function MoodButtons(props) {\n  const handleClick = props.click;\n\n  return (\n    <div className=\"custom-radios\">\n      <div>\n        <input type=\"radio\" id=\"color-1\" name=\"color\" value=\"color-1\" />\n        <label htmlFor=\"color-1\">\n          <span onClick={handleClick} id=\"1\">\n            <img\n              src=\"https://openmoji.org/data/black/svg/1F613.svg\"\n              alt=\"\"\n              id=\"1\"\n            />\n            {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/242518/check-icn.svg\" alt=\"Checked Icon\" id=\"1\" /> */}\n          </span>\n        </label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"color-2\" name=\"color\" value=\"color-2\" />\n        <label htmlFor=\"color-2\">\n          <span onClick={handleClick} id=\"2\">\n            <img\n              src=\"https://openmoji.org/data/black/svg/1F641.svg\"\n              alt=\"\"\n              id=\"2\"\n            />\n            {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/242518/check-icn.svg\" alt=\"Checked Icon\" id=\"2\" /> */}\n          </span>\n        </label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"color-3\" name=\"color\" value=\"color-3\" />\n        <label htmlFor=\"color-3\">\n          <span onClick={handleClick} id=\"3\">\n            <img\n              src=\"https://openmoji.org/data/black/svg/1F610.svg\"\n              alt=\"\"\n              id=\"3\"\n            />\n            {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/242518/check-icn.svg\" alt=\"Checked Icon\" id=\"3\" /> */}\n          </span>\n        </label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"color-4\" name=\"color\" value=\"color-4\" />\n        <label htmlFor=\"color-4\">\n          <span onClick={handleClick} id=\"4\">\n            <img\n              src=\"https://openmoji.org/data/black/svg/1F642.svg\"\n              alt=\"\"\n              id=\"4\"\n            />\n            {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/242518/check-icn.svg\" alt=\"Checked Icon\" id=\"4\" /> */}\n          </span>\n        </label>\n      </div>\n      <div>\n        <input type=\"radio\" id=\"color-5\" name=\"color\" value=\"color-5\" />\n        <label htmlFor=\"color-5\">\n          <span onClick={handleClick} id=\"5\">\n            <img\n              src=\"https://openmoji.org/data/black/svg/1F60A.svg\"\n              alt=\"\"\n              id=\"5\"\n            />\n            {/* <img src=\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/242518/check-icn.svg\" alt=\"Checked Icon\" id=\"5\" /> */}\n          </span>\n        </label>\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport MoodButtons from \"../components/MoodButtons\";\n\nexport default function MoodForm(props) {\n  const [moodSelection, setMoodSelection] = useState(null);\n  const [activities, setActivities] = useState([]);\n\n  function handleMoodSelection(e) {\n    setMoodSelection(e.target.id);\n  }\n\n  function handleActivitySelection(e) {\n    let activitiesFiltered = null;\n\n    if (activities.includes(e.target.value)) {\n      activitiesFiltered = activities.filter((activity) => {\n        return activity !== e.target.value;\n      });\n      setActivities(activitiesFiltered);\n    } else {\n      setActivities([...activities, e.target.value]);\n    }\n  }\n\n  function handleSubmit() {\n    props.onFormChange(activities, moodSelection);\n  }\n\n  return (\n    <div>\n      <MoodButtons click={handleMoodSelection}/>\n      <p className=\"info-header\">Click a colour that represents your mood and select the activities you were doing.</p>\n      <div className=\"activity-check-boxes\">\n        <div className=\"form-check\" onClick={handleActivitySelection}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"Work\"\n            id=\"flexCheckWork\"\n          ></input>\n          <label className=\"form-check-label\" htmlFor=\"flexCheckWork\">\n            Work\n          </label>\n        </div>\n        <div className=\"form-check\" onClick={handleActivitySelection}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"Social\"\n            id=\"flexCheckSocial\"\n          ></input>\n          <label className=\"form-check-label\" htmlFor=\"flexCheckSocial\">\n            Social\n          </label>\n        </div>\n        <div className=\"form-check\" onClick={handleActivitySelection}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"Hobbies\"\n            id=\"flexCheckHobbies\"\n          ></input>\n          <label className=\"form-check-label\" htmlFor=\"flexCheckHobbies\">\n            Hobbies\n          </label>\n        </div>\n        <div className=\"form-check\" onClick={handleActivitySelection}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"Excercise\"\n            id=\"flexCheckExcercise\"\n          ></input>\n          <label className=\"form-check-label\" htmlFor=\"flexCheckExcercise\">\n            Excercise\n          </label>\n        </div>\n        <div className=\"form-check\" onClick={handleActivitySelection}>\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            value=\"Housework\"\n            id=\"flexCheckSocialising\"\n          ></input>\n          <label className=\"form-check-label\" htmlFor=\"flexCheckHousework\">\n            Housework\n          </label>\n        </div>\n      </div>\n      <button type=\"button\" onClick={handleSubmit} className=\"btn btn-info\">\n        Enter\n      </button>\n    </div>\n  );\n}\n","import MoodForm from \"./MoodForm\";\nimport Smile from \"../components/Smile\"\nimport { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport default function Mood({ userId }) {\n  const [redirectBool, setRedirectBool] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  function handleFormChanges(activities, moodSelection) {\n    const mood = { userId, moodSelection, activities };\n\n    axios.post(\"/mood\", mood).then((response) => {\n      if (response.data.message === \"success\") {\n        setRedirectBool(true);\n      } else if (response.data.message === \"failed\") {\n        console.log(\"failed\");\n      }\n    });\n  }\n\n  useEffect(() => {\n    const request = { userId };\n\n    axios.post(\"/verify-mood\", request).then((response) => {\n      if (response.data.message === \"success\") {\n        setRedirectBool(true);\n      } else if (response.data.message === \"failed\") {\n        setLoading(false);\n      }\n    });\n  });\n\n  return (\n    <div>\n      {loading ? (\n        <div>\"loading\"</div>\n      ) : (\n        <div className=\"mood-input-form\">\n          <Smile />\n          <p className=\"info-header\">A simple mood tracker to keep you smiling</p>\n          <MoodForm onFormChange={handleFormChanges} />\n        </div>\n      )}\n      {redirectBool && <Redirect to=\"/dashboard\" />}\n    </div>\n  );\n}\n","import MoodForm from \"./MoodForm\";\nimport Smile from \"../components/Smile\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport '../styles/MoodInputForm.css'\n\nexport default function EditMood({ userId }) {\n  const [redirectBool, setRedirectBool] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { date } = useParams();\n\n  function handleFormChanges(activities, moodSelection) {\n    const mood = { userId, date, moodSelection, activities };\n\n    axios.post(\"/edit-mood\", mood).then((response) => {\n      if (response.data.message === \"success\") {\n        setRedirectBool(true);\n      } else if (response.data.message === \"updated\") {\n        setRedirectBool(true);\n      }\n    });\n  }\n\n  useEffect(() => {\n    setLoading(false);\n  });\n\n  return (\n    <div className=\"mood-input-form\">\n      <Smile />\n      <p className=\"info-header\">A simple mood tracker to keep you smiling</p>\n      <h4 className=\"edit-date\">{date} </h4>\n      {loading ? (\n        <div>\"loading\"</div>\n      ) : (\n        <MoodForm onFormChange={handleFormChanges} />\n      )}\n      {redirectBool && <Redirect to=\"/dashboard\" />}\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport GuardedRoute from \"./components/GuardedRoute\";\nimport Register from \"./components/Register\";\nimport LoginPage from \"./components/LoginPage\";\nimport Logout from \"./components/Logout\";\nimport Dashboard from \"./components/Dashboard\";\nimport Mood from \"./components/Mood\";\nimport EditMood from \"./components/EditMood\";\nimport \"./styles/App.css\";\nimport \"./styles/LoginPage.css\";\nimport \"./styles/Register.css\";\nimport \"./styles/DayPickerContainer.css\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/logout\">\n          <Logout />\n        </Route>\n        <GuardedRoute path=\"/dashboard\" component={Dashboard} />\n        <GuardedRoute path=\"/mood/:date\" component={EditMood} />\n        <GuardedRoute path=\"/mood\" component={Mood} />\n      </Switch>\n      <div className=\"logout-footer\">\n        <Link to=\"/logout\">\n          Logout\n        </Link>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}